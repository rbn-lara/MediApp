<?xml version="1.0" encoding="UTF-8"?>
<Shell xmlns="http://xamarin.com/schemas/2014/forms" 
       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
       xmlns:local="clr-namespace:MediApp.Views"
       Title="MediApp"
       x:Class="MediApp.AppShell">

    <!--
        The overall app visual hierarchy is defined here, along with navigation.
    
        https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/
    -->

    <Shell.Resources>
        <ResourceDictionary>
            <Style x:Key="BaseStyle" TargetType="Element">
                <Setter Property="Shell.BackgroundColor" Value="{StaticResource Primary}" />
                <Setter Property="Shell.ForegroundColor" Value="Black" />
                <Setter Property="Shell.TitleColor" Value="{StaticResource Cuaternary}" />
                <Setter Property="Shell.DisabledColor" Value="#B4FFFFFF" />
                <Setter Property="Shell.UnselectedColor" Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarBackgroundColor" Value="{StaticResource Primary}" />
                <Setter Property="Shell.TabBarForegroundColor" Value="White"/>
                <Setter Property="Shell.TabBarUnselectedColor" Value="Gray"/>
                <Setter Property="Shell.TabBarTitleColor" Value="Black"/>

            </Style>
            <Style TargetType="TabBar" BasedOn="{StaticResource BaseStyle}" />
            <Style TargetType="FlyoutItem" BasedOn="{StaticResource BaseStyle}" />

            <!--
            Default Styles for all Flyout Items
            https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyoutitem-and-menuitem-style-classes
            -->
            <Style Class="FlyoutItemLabelStyle" TargetType="Label">
                <Setter Property="TextColor" Value="Black"></Setter>
            </Style>
            <Style Class="FlyoutItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{x:OnPlatform UWP=Transparent, iOS=White}" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Cuaternary}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <!--
            Custom Style you can apply to any Flyout Item
            -->
            <Style Class="MenuItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Cuaternary}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Shell.Resources>

    <!--
        TabBar lets you define content that won't show up in a flyout menu. When this content is active
        the flyout menu won't be available. This is useful for creating areas of the application where 
        you don't want users to be able to navigate away from. If you would like to navigate to this 
        content you can do so by calling 
        await Shell.Current.GoToAsync("//LoginPage");
    -->
    <ShellItem FlyoutItemIsVisible="False">
        <ShellContent Route="LoginPage" ContentTemplate="{DataTemplate local:LoginPage}" />
    </ShellItem>

    <FlyoutItem FlyoutItemIsVisible="False">
        <ShellContent Route="RegisterPage" Title="Registro de Usuario" ContentTemplate="{DataTemplate local:RegisterPage}" />
    </FlyoutItem>
    <FlyoutItem Title="Tus datos" FlyoutIcon="sheet_logo.png">
        <ShellContent 
            Route="PatientDetailsPage" Title="Datos Personales" ContentTemplate="{DataTemplate local:PatientDetailsPage}"/>
    </FlyoutItem>
    <FlyoutItem Title="Citas" FlyoutIcon="appointment_logo.png">
        <Tab Title="Agendar Cita" Icon="icon_feed.png">
            <ShellContent Route="AppointmentPage" ContentTemplate="{DataTemplate local:AppointmentPage}"/>            
        </Tab>
        <Tab Title="Ver Citas" Icon="sheet_logo.png">
            <ShellContent Route="AppointmentListPage" Title="Citas" ContentTemplate="{DataTemplate local:AppointmentListPage}"/>
        </Tab>
    </FlyoutItem>
    <FlyoutItem Title="Registro de Servicios" FlyoutIcon="service_logo.png" >
        <ShellContent Route="MedicalServicePage" Title="Servicios" ContentTemplate="{DataTemplate local:MedicalServicePage}"/>
    </FlyoutItem>

    <MenuItem Text="Logout" IconImageSource="arrow_logo.png" StyleClass="MenuItemLayoutStyle" Clicked="OnMenuItemClicked">
    </MenuItem>

</Shell>
